Eric Dazet (edazet) and Nathik Salam (nsalam)
CPE 419
2 October 2015

Assignment 2 Report

1) Run Data

As requested by the assignment, we conducted three runs for each of the two 
possible variations, using the system time command and the 1408.in matrix
for both input matrices. Below are the runtimes for each variation. We decided 
to use the "real" value given by the time command. 

          |  Run 1    |  Run 2    |  Run 3    |  Average     |
----------|-----------------------------------|--------------|
Float     |   3.017s  |   2.994s  |   2.935s  |   2.982s     |
Double    |   3.052s  |   3.035s  |   3.013s  |   3.033s     |

As expected, the float version was slightly faster than the double version.


2) Question: In your kernel implementation, how many threads can be
simultaneously executing on a GeForce 980 GPU, which contains 16 Streaming
Multiprocessors. Use nvcc --ptxas-options="-v" <yourfile>.cu to see the
resource usage of your kernel.

According to the ptxas output, this program consumes 15 registers per thread and each block has 32x32=1024 threads, 1024 threads consume 1024x15=15,360registers which is less than number of registers per block 65536 so that is not a constraining factor. The total amount of shared memory used by the program is 60 bytes, and the amount of constant memory available is 65536 bytes, so that is not a limiting factor either. Therefor the limiting factor on the GeForce 980 GPU on the number of threads for our implementation of the kernel is maximum number of threads per multiprocessor times the number of multiprocessors which is 2048*16=32,768 threads.